{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\les\\\\homework33-react\\\\src\\\\homework35\\\\Form\\\\MyForm.jsx\";\nimport { StyledForm } from \"./StyledForm\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskForm({\n  setStorage\n}) {\n  //adding value from input to local storage\n  function addTaskToLocalStorage(task) {\n    if (task.title) {\n      const tasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n      task.completed = false;\n      task.id = nanoid(6);\n      tasks.push(task);\n      setStorage(tasks);\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  }\n  const validationSchema = Yup.object({\n    title: Yup.string().min(3, \"Title must be at least 3 characters long\").required(\"Title is required\")\n  });\n  return /*#__PURE__*/_jsxDEV(StyledForm, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body p-0\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            title: \"\"\n          },\n          validationSchema: validationSchema,\n          onSubmit: (values, {\n            resetForm\n          }) => {\n            addTaskToLocalStorage(values);\n            resetForm();\n          },\n          children: ({\n            errors,\n            touched\n          }) => {\n            return /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Add new task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Field, {\n                  name: \"title\",\n                  type: \"text\",\n                  className: `form-control ${touched.title && errors.title ? \"is-invalid\" : \"\"}`,\n                  placeholder: \"Enter title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"title\",\n                  component: \"div\",\n                  className: \"invalid-feedback\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary mt-3\",\n                onClick: console.log(14),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["StyledForm","Formik","Form","Field","ErrorMessage","Yup","nanoid","jsxDEV","_jsxDEV","TaskForm","setStorage","addTaskToLocalStorage","task","title","tasks","JSON","parse","localStorage","getItem","completed","id","push","setItem","stringify","validationSchema","object","string","min","required","children","className","initialValues","onSubmit","values","resetForm","errors","touched","fileName","_jsxFileName","lineNumber","columnNumber","name","type","placeholder","component","onClick","console","log","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/les/homework33-react/src/homework35/Form/MyForm.jsx"],"sourcesContent":["import { StyledForm } from \"./StyledForm\"\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\"\r\nimport * as Yup from \"yup\"\r\nimport { nanoid } from \"nanoid\"\r\n\r\nexport default function TaskForm({ setStorage }) {\r\n  //adding value from input to local storage\r\n  function addTaskToLocalStorage(task) {\r\n    if (task.title) {\r\n      const tasks = JSON.parse(localStorage.getItem(\"tasks\")) || []\r\n      task.completed = false\r\n      task.id = nanoid(6)\r\n      tasks.push(task)\r\n      setStorage(tasks)\r\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks))\r\n    }\r\n  }\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string()\r\n      .min(3, \"Title must be at least 3 characters long\")\r\n      .required(\"Title is required\"),\r\n  })\r\n\r\n  return (\r\n    <StyledForm>\r\n      <div className={\"card\"}>\r\n        <div className=\"card-body p-0\">\r\n          <Formik\r\n            initialValues={{ title: \"\" }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, { resetForm }) => {\r\n              addTaskToLocalStorage(values)\r\n              resetForm()\r\n            }}\r\n          >\r\n            {({ errors, touched }) => {\r\n              return (\r\n                <Form>\r\n                  <h4>Add new task</h4>\r\n                  <div>\r\n                    <Field\r\n                      name=\"title\"\r\n                      type=\"text\"\r\n                      className={`form-control ${\r\n                        touched.title && errors.title ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      placeholder=\"Enter title\"\r\n                    ></Field>\r\n                    <ErrorMessage\r\n                      name=\"title\"\r\n                      component=\"div\"\r\n                      className=\"invalid-feedback\"\r\n                    />\r\n                  </div>\r\n\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary mt-3\"\r\n                    onClick={console.log(14)}\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </Form>\r\n              )\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </StyledForm>\r\n  )\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,MAAM,QAAQ,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAC/C;EACA,SAASC,qBAAqBA,CAACC,IAAI,EAAE;IACnC,IAAIA,IAAI,CAACC,KAAK,EAAE;MACd,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;MAC7DN,IAAI,CAACO,SAAS,GAAG,KAAK;MACtBP,IAAI,CAACQ,EAAE,GAAGd,MAAM,CAAC,CAAC,CAAC;MACnBQ,KAAK,CAACO,IAAI,CAACT,IAAI,CAAC;MAChBF,UAAU,CAACI,KAAK,CAAC;MACjBG,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACQ,SAAS,CAACT,KAAK,CAAC,CAAC;IACtD;EACF;EAEA,MAAMU,gBAAgB,GAAGnB,GAAG,CAACoB,MAAM,CAAC;IAClCZ,KAAK,EAAER,GAAG,CAACqB,MAAM,CAAC,CAAC,CAChBC,GAAG,CAAC,CAAC,EAAE,0CAA0C,CAAC,CAClDC,QAAQ,CAAC,mBAAmB;EACjC,CAAC,CAAC;EAEF,oBACEpB,OAAA,CAACR,UAAU;IAAA6B,QAAA,eACTrB,OAAA;MAAKsB,SAAS,EAAE,MAAO;MAAAD,QAAA,eACrBrB,OAAA;QAAKsB,SAAS,EAAC,eAAe;QAAAD,QAAA,eAC5BrB,OAAA,CAACP,MAAM;UACL8B,aAAa,EAAE;YAAElB,KAAK,EAAE;UAAG,CAAE;UAC7BW,gBAAgB,EAAEA,gBAAiB;UACnCQ,QAAQ,EAAEA,CAACC,MAAM,EAAE;YAAEC;UAAU,CAAC,KAAK;YACnCvB,qBAAqB,CAACsB,MAAM,CAAC;YAC7BC,SAAS,CAAC,CAAC;UACb,CAAE;UAAAL,QAAA,EAEDA,CAAC;YAAEM,MAAM;YAAEC;UAAQ,CAAC,KAAK;YACxB,oBACE5B,OAAA,CAACN,IAAI;cAAA2B,QAAA,gBACHrB,OAAA;gBAAAqB,QAAA,EAAI;cAAY;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrBhC,OAAA;gBAAAqB,QAAA,gBACErB,OAAA,CAACL,KAAK;kBACJsC,IAAI,EAAC,OAAO;kBACZC,IAAI,EAAC,MAAM;kBACXZ,SAAS,EAAG,gBACVM,OAAO,CAACvB,KAAK,IAAIsB,MAAM,CAACtB,KAAK,GAAG,YAAY,GAAG,EAChD,EAAE;kBACH8B,WAAW,EAAC;gBAAa;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CAAC,eACThC,OAAA,CAACJ,YAAY;kBACXqC,IAAI,EAAC,OAAO;kBACZG,SAAS,EAAC,KAAK;kBACfd,SAAS,EAAC;gBAAkB;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAENhC,OAAA;gBACEkC,IAAI,EAAC,QAAQ;gBACbZ,SAAS,EAAC,sBAAsB;gBAChCe,OAAO,EAAEC,OAAO,CAACC,GAAG,CAAC,EAAE,CAAE;gBAAAlB,QAAA,EAC1B;cAED;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAEX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB;AAACQ,EAAA,GAlEuBvC,QAAQ;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}