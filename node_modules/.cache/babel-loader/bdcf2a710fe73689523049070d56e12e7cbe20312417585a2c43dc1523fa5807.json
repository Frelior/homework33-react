{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\les\\\\homework33-react\\\\src\\\\VoteForSmile\\\\VoteForSmile.jsx\",\n  _s = $RefreshSig$();\nimport { styled } from \"styled-components\";\nimport Button from \"../Button/Button\";\nimport { useState } from \"react\";\nimport ModalWindow from \"../ModalWindow/ModalWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledVoteForSmile = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  ul {\n    padding: 0;\n    margin: 0;\n    // border: 1px solid black;\n    display: flex;\n    justify-content: center;\n  }\n  li {\n    margin: 0 1rem;\n    list-style: none;\n    // border: 1px solid black;\n  }\n  & li * {\n    font-size: 2rem;\n    text-align: center;\n  }\n  hr {\n    margin: 0;\n  }\n`;\n_c = StyledVoteForSmile;\nexport default function VoteForSmile() {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [counters, setCounters] = useState({\n    clown: 0,\n    beast: 0,\n    mask: 0,\n    poop: 0,\n    police: 0\n  });\n  const emojies = {\n    clown: \"ðŸ¤¡\",\n    beast: \"ðŸ‘¹\",\n    mask: \"ðŸ‘º\",\n    poop: \"ðŸ’©\",\n    police: \"ðŸ‘®\"\n  };\n  function handleClickCounter(event) {\n    const emojiValue = event.target.getAttribute(\"emoji\");\n    setCounters({\n      ...counters,\n      [emojiValue]: counters[emojiValue] + 1\n    });\n  }\n  function openModal() {\n    setShowModal(prev => !prev);\n  }\n  function countVotes() {\n    let maxKey = null;\n    let maxValue = [-Infinity];\n    for (const key in counters) {\n      if (counters[key] > maxValue[0]) {\n        maxKey = key;\n        maxValue = [counters[key]];\n      } else if (counters[key] === maxValue[0]) {\n        maxValue.push(counters[key]);\n      }\n    }\n    if (maxValue.length > 1) {\n      maxKey = maxValue;\n    }\n    return maxKey;\n  }\n  return /*#__PURE__*/_jsxDEV(StyledVoteForSmile, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-3 mb-5\",\n      children: \"Vote for best emoji\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(emojies).map(key => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            emoji: key,\n            onClick: handleClickCounter,\n            children: emojies[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: counters[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-outline-dark my-2\",\n      onClick: openModal,\n      children: \"Show results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(ModalWindow, {\n      open: showModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"WINNER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: emojies.clown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"with \", counters.clown, \" votes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: openModal,\n        children: \"AWESOME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(VoteForSmile, \"CUDoR5LenPuyoq/4MxBvjtbZ4aY=\");\n_c2 = VoteForSmile;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledVoteForSmile\");\n$RefreshReg$(_c2, \"VoteForSmile\");","map":{"version":3,"names":["styled","Button","useState","ModalWindow","jsxDEV","_jsxDEV","StyledVoteForSmile","div","_c","VoteForSmile","_s","showModal","setShowModal","counters","setCounters","clown","beast","mask","poop","police","emojies","handleClickCounter","event","emojiValue","target","getAttribute","openModal","prev","countVotes","maxKey","maxValue","Infinity","key","push","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","emoji","onClick","open","_c2","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/les/homework33-react/src/VoteForSmile/VoteForSmile.jsx"],"sourcesContent":["import { styled } from \"styled-components\"\r\nimport Button from \"../Button/Button\"\r\nimport { useState } from \"react\"\r\nimport ModalWindow from \"../ModalWindow/ModalWindow\"\r\n\r\nconst StyledVoteForSmile = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  ul {\r\n    padding: 0;\r\n    margin: 0;\r\n    // border: 1px solid black;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  li {\r\n    margin: 0 1rem;\r\n    list-style: none;\r\n    // border: 1px solid black;\r\n  }\r\n  & li * {\r\n    font-size: 2rem;\r\n    text-align: center;\r\n  }\r\n  hr {\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nexport default function VoteForSmile() {\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [counters, setCounters] = useState({\r\n    clown: 0,\r\n    beast: 0,\r\n    mask: 0,\r\n    poop: 0,\r\n    police: 0,\r\n  })\r\n  const emojies = {\r\n    clown: \"ðŸ¤¡\",\r\n    beast: \"ðŸ‘¹\",\r\n    mask: \"ðŸ‘º\",\r\n    poop: \"ðŸ’©\",\r\n    police: \"ðŸ‘®\",\r\n  }\r\n\r\n  function handleClickCounter(event) {\r\n    const emojiValue = event.target.getAttribute(\"emoji\")\r\n    setCounters({\r\n      ...counters,\r\n      [emojiValue]: counters[emojiValue] + 1,\r\n    })\r\n  }\r\n\r\n  function openModal() {\r\n    setShowModal((prev) => !prev)\r\n  }\r\n\r\n  function countVotes() {\r\n    let maxKey = null\r\n    let maxValue = [-Infinity]\r\n\r\n    for (const key in counters) {\r\n      if (counters[key] > maxValue[0]) {\r\n        maxKey = key\r\n        maxValue = [counters[key]]\r\n      } else if (counters[key] === maxValue[0]) {\r\n        maxValue.push(counters[key])\r\n      }\r\n    }\r\n\r\n    if (maxValue.length > 1) {\r\n      maxKey = maxValue\r\n    }\r\n    return maxKey\r\n  }\r\n\r\n  return (\r\n    <StyledVoteForSmile>\r\n      <h1 className=\"mt-3 mb-5\">Vote for best emoji</h1>\r\n\r\n      <ul>\r\n        {Object.keys(emojies).map((key) => {\r\n          return (\r\n            <li key={key}>\r\n              <Button\r\n                emoji={key}\r\n                onClick={handleClickCounter}\r\n              >\r\n                {emojies[key]}\r\n              </Button>\r\n              <hr />\r\n              <p>{counters[key]}</p>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n\r\n      <Button\r\n        className=\"btn btn-outline-dark my-2\"\r\n        onClick={openModal}\r\n      >\r\n        Show results\r\n      </Button>\r\n\r\n      {/* processing modal window */}\r\n      {showModal && (\r\n        <ModalWindow open={showModal}>\r\n          <h2>WINNER</h2>\r\n          <h3>{emojies.clown}</h3>\r\n          <p>with {counters.clown} votes</p>\r\n          <Button onClick={openModal}>AWESOME</Button>\r\n        </ModalWindow>\r\n      )}\r\n    </StyledVoteForSmile>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}