{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\les\\\\homework33-react\\\\src\\\\homework35\\\\Form\\\\MyForm.jsx\";\nimport { StyledForm } from \"./StyledForm\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  addTask\n}) => {\n  const initialValues = {\n    task: \"\"\n  };\n  const validationSchema = Yup.object({\n    task: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: (values, {\n          resetForm\n        }) => {\n          addTask(values.task);\n          resetForm();\n        },\n        children: () => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"task\",\n            placeholder: \"Enter your task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"task\",\n            component: \"div\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["StyledForm","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","TaskForm","addTask","initialValues","task","validationSchema","object","string","min","max","required","className","children","onSubmit","values","resetForm","name","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","component","type","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/les/homework33-react/src/homework35/Form/MyForm.jsx"],"sourcesContent":["import { StyledForm } from \"./StyledForm\"\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\"\r\nimport * as Yup from \"yup\"\r\n\r\nconst TaskForm = ({ addTask }) => {\r\n  const initialValues = { task: \"\" }\r\n  const validationSchema = Yup.object({\r\n    task: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"Required\"),\r\n  })\r\n\r\n  return (\r\n    <div className={\"card\"}>\r\n      <div className=\"card-body\">\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, { resetForm }) => {\r\n            addTask(values.task)\r\n            resetForm()\r\n          }}\r\n        >\r\n          {() => (\r\n            <Form>\r\n              <Field\r\n                name=\"task\"\r\n                placeholder=\"Enter your task\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"task\"\r\n                component=\"div\"\r\n              />\r\n              <button type=\"submit\">Add Task</button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskForm\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAChC,MAAMC,aAAa,GAAG;IAAEC,IAAI,EAAE;EAAG,CAAC;EAClC,MAAMC,gBAAgB,GAAGP,GAAG,CAACQ,MAAM,CAAC;IAClCF,IAAI,EAAEN,GAAG,CAACS,MAAM,CAAC,CAAC,CACfC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,CACpBC,GAAG,CAAC,EAAE,EAAE,WAAW,CAAC,CACpBC,QAAQ,CAAC,UAAU;EACxB,CAAC,CAAC;EAEF,oBACEV,OAAA;IAAKW,SAAS,EAAE,MAAO;IAAAC,QAAA,eACrBZ,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBZ,OAAA,CAACN,MAAM;QACLS,aAAa,EAAEA,aAAc;QAC7BE,gBAAgB,EAAEA,gBAAiB;QACnCQ,QAAQ,EAAEA,CAACC,MAAM,EAAE;UAAEC;QAAU,CAAC,KAAK;UACnCb,OAAO,CAACY,MAAM,CAACV,IAAI,CAAC;UACpBW,SAAS,CAAC,CAAC;QACb,CAAE;QAAAH,QAAA,EAEDA,CAAA,kBACCZ,OAAA,CAACL,IAAI;UAAAiB,QAAA,gBACHZ,OAAA,CAACJ,KAAK;YACJoB,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eACFrB,OAAA,CAACH,YAAY;YACXmB,IAAI,EAAC,MAAM;YACXM,SAAS,EAAC;UAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACFrB,OAAA;YAAQuB,IAAI,EAAC,QAAQ;YAAAX,QAAA,EAAC;UAAQ;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAG,EAAA,GArCKvB,QAAQ;AAuCd,eAAeA,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}