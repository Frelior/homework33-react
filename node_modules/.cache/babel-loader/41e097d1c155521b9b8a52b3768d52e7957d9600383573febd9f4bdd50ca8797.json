{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\les\\\\homework33-react\\\\src\\\\homework35\\\\Form\\\\MyForm.jsx\";\nimport { StyledForm } from \"./StyledForm\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  addTask\n}) => {\n  const initialValues = {\n    task: \"\"\n  };\n  const validationSchema = Yup.object({\n    task: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(\"Required\")\n  });\n  return /*#__PURE__*/_jsxDEV(StyledForm, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            title: \"\"\n          },\n          onSubmit: values => console.log(values),\n          children: ({\n            errors,\n            touched\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"title\",\n              type: \"text\",\n              className: touched.title && \"form-control is-valid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["StyledForm","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","TaskForm","addTask","initialValues","task","validationSchema","object","string","min","max","required","children","className","title","onSubmit","values","console","log","errors","touched","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","type","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/les/homework33-react/src/homework35/Form/MyForm.jsx"],"sourcesContent":["import { StyledForm } from \"./StyledForm\"\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\"\r\nimport * as Yup from \"yup\"\r\n\r\nconst TaskForm = ({ addTask }) => {\r\n  const initialValues = { task: \"\" }\r\n  const validationSchema = Yup.object({\r\n    task: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"Required\"),\r\n  })\r\n\r\n  return (\r\n    <StyledForm>\r\n      <div className={\"card\"}>\r\n        <div className=\"card-body\">\r\n          <Formik\r\n            initialValues={{ title: \"\" }}\r\n            onSubmit={(values) => console.log(values)}\r\n          >\r\n            {({ errors, touched }) => (\r\n              <Form>\r\n                <label htmlFor=\"title\">Task</label>\r\n                <Field\r\n                  name=\"title\"\r\n                  type=\"text\"\r\n                  className={touched.title && \"form-control is-valid\"}\r\n                ></Field>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </StyledForm>\r\n  )\r\n}\r\n\r\nexport default TaskForm\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAChC,MAAMC,aAAa,GAAG;IAAEC,IAAI,EAAE;EAAG,CAAC;EAClC,MAAMC,gBAAgB,GAAGP,GAAG,CAACQ,MAAM,CAAC;IAClCF,IAAI,EAAEN,GAAG,CAACS,MAAM,CAAC,CAAC,CACfC,GAAG,CAAC,CAAC,EAAE,YAAY,CAAC,CACpBC,GAAG,CAAC,EAAE,EAAE,WAAW,CAAC,CACpBC,QAAQ,CAAC,UAAU;EACxB,CAAC,CAAC;EAEF,oBACEV,OAAA,CAACP,UAAU;IAAAkB,QAAA,eACTX,OAAA;MAAKY,SAAS,EAAE,MAAO;MAAAD,QAAA,eACrBX,OAAA;QAAKY,SAAS,EAAC,WAAW;QAAAD,QAAA,eACxBX,OAAA,CAACN,MAAM;UACLS,aAAa,EAAE;YAAEU,KAAK,EAAE;UAAG,CAAE;UAC7BC,QAAQ,EAAGC,MAAM,IAAKC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAE;UAAAJ,QAAA,EAEzCA,CAAC;YAAEO,MAAM;YAAEC;UAAQ,CAAC,kBACnBnB,OAAA,CAACL,IAAI;YAAAgB,QAAA,gBACHX,OAAA;cAAOoB,OAAO,EAAC,OAAO;cAAAT,QAAA,EAAC;YAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACnCxB,OAAA,CAACJ,KAAK;cACJ6B,IAAI,EAAC,OAAO;cACZC,IAAI,EAAC,MAAM;cACXd,SAAS,EAAEO,OAAO,CAACN,KAAK,IAAI;YAAwB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QACP;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB,CAAC;AAAAG,EAAA,GAhCK1B,QAAQ;AAkCd,eAAeA,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}