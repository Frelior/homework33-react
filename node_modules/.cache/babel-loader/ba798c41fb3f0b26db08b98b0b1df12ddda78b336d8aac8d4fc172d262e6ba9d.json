{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\les\\\\homework33-react\\\\src\\\\VoteForSmile\\\\VoteForSmile.jsx\",\n  _s = $RefreshSig$();\nimport { styled } from \"styled-components\";\nimport SmileButton from \"./SmileButton\";\nimport Button from \"../Button/Button\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledVoteForSmile = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  ul {\n    padding: 0;\n    margin: 0;\n    // border: 1px solid black;\n    display: flex;\n    justify-content: center;\n  }\n  li {\n    margin: 0 1rem;\n    list-style: none;\n    font-size: 3rem;\n    // border: 1px solid black;\n  }\n`;\n_c = StyledVoteForSmile;\nexport default function VoteForSmile() {\n  _s();\n  var _counters$winner;\n  const [counters, setCounters] = useState({\n    clown: 0,\n    beast: 0,\n    mask: 0,\n    poop: 0,\n    police: 0,\n    winner: null\n  });\n  function handleClick(event) {\n    const emoji = event.currentTarget.getAttribute(\"emoji\");\n    setCounters(prev => {\n      return {\n        ...prev,\n        [emoji]: prev[emoji] + 1\n      };\n    });\n  }\n  function countVotes() {\n    let maxValue = -Infinity;\n    let maxKeys = [];\n    for (const key in counters) {\n      if (key === \"winner\") continue;\n      if (counters.hasOwnProperty(key) && key !== 0) {\n        const value = counters[key];\n        if (value > maxValue) {\n          maxValue = value;\n          maxKeys = [key];\n        } else if (value === maxValue) {\n          maxKeys.push(key);\n        }\n      }\n    }\n    setCounters({\n      ...counters,\n      winner: maxKeys\n    });\n  }\n  function showResult() {\n    if (counters.winner) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Winner is \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-warning\",\n          children: [\" \", counters.winner, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(StyledVoteForSmile, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-3 mb-5\",\n      children: \"Vote for best emoji\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(SmileButton, {\n          emoji: \"clown\",\n          onClick: handleClick,\n          counter: counters.clown,\n          children: \"\\uD83E\\uDD21\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(SmileButton, {\n          emoji: \"beast\",\n          onClick: handleClick,\n          counter: counters.beast,\n          children: \"\\uD83D\\uDC79\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(SmileButton, {\n          emoji: \"mask\",\n          onClick: handleClick,\n          counter: counters.mask,\n          children: \"\\uD83D\\uDC7A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(SmileButton, {\n          emoji: \"poop\",\n          onClick: handleClick,\n          counter: counters.poop,\n          children: \"\\uD83D\\uDCA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(SmileButton, {\n          emoji: \"police\",\n          onClick: handleClick,\n          counter: counters.police,\n          children: \"\\uD83D\\uDC6E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-outline-dark m-5\",\n        onClick: countVotes,\n        children: \"asd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"result disabled\",\n        children: [\"Winner is \", (_counters$winner = counters.winner) === null || _counters$winner === void 0 ? void 0 : _counters$winner[0], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(VoteForSmile, \"JABM2u5xAJoDo0QuqPOudLcZXyE=\");\n_c2 = VoteForSmile;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledVoteForSmile\");\n$RefreshReg$(_c2, \"VoteForSmile\");","map":{"version":3,"names":["styled","SmileButton","Button","useState","jsxDEV","_jsxDEV","StyledVoteForSmile","div","_c","VoteForSmile","_s","_counters$winner","counters","setCounters","clown","beast","mask","poop","police","winner","handleClick","event","emoji","currentTarget","getAttribute","prev","countVotes","maxValue","Infinity","maxKeys","key","hasOwnProperty","value","push","showResult","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","counter","_c2","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/les/homework33-react/src/VoteForSmile/VoteForSmile.jsx"],"sourcesContent":["import { styled } from \"styled-components\"\r\nimport SmileButton from \"./SmileButton\"\r\nimport Button from \"../Button/Button\"\r\nimport { useState } from \"react\"\r\n\r\nconst StyledVoteForSmile = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  ul {\r\n    padding: 0;\r\n    margin: 0;\r\n    // border: 1px solid black;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  li {\r\n    margin: 0 1rem;\r\n    list-style: none;\r\n    font-size: 3rem;\r\n    // border: 1px solid black;\r\n  }\r\n`\r\n\r\nexport default function VoteForSmile() {\r\n  const [counters, setCounters] = useState({\r\n    clown: 0,\r\n    beast: 0,\r\n    mask: 0,\r\n    poop: 0,\r\n    police: 0,\r\n    winner: null,\r\n  })\r\n\r\n  function handleClick(event) {\r\n    const emoji = event.currentTarget.getAttribute(\"emoji\")\r\n    setCounters((prev) => {\r\n      return { ...prev, [emoji]: prev[emoji] + 1 }\r\n    })\r\n  }\r\n\r\n  function countVotes() {\r\n    let maxValue = -Infinity\r\n    let maxKeys = []\r\n\r\n    for (const key in counters) {\r\n      if (key === \"winner\") continue\r\n      if (counters.hasOwnProperty(key) && key !== 0) {\r\n        const value = counters[key]\r\n        if (value > maxValue) {\r\n          maxValue = value\r\n          maxKeys = [key]\r\n        } else if (value === maxValue) {\r\n          maxKeys.push(key)\r\n        }\r\n      }\r\n    }\r\n    setCounters({ ...counters, winner: maxKeys })\r\n  }\r\n\r\n  function showResult() {\r\n    if (counters.winner) {\r\n      return (\r\n        <p>\r\n          Winner is <span className=\"text-warning\"> {counters.winner} </span>\r\n        </p>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledVoteForSmile>\r\n      <h1 className=\"mt-3 mb-5\">Vote for best emoji</h1>\r\n      <ul>\r\n        <li>\r\n          <SmileButton\r\n            emoji=\"clown\"\r\n            onClick={handleClick}\r\n            counter={counters.clown}\r\n          >\r\n            ðŸ¤¡\r\n          </SmileButton>\r\n        </li>\r\n        <li>\r\n          <SmileButton\r\n            emoji=\"beast\"\r\n            onClick={handleClick}\r\n            counter={counters.beast}\r\n          >\r\n            ðŸ‘¹\r\n          </SmileButton>\r\n        </li>\r\n        <li>\r\n          <SmileButton\r\n            emoji=\"mask\"\r\n            onClick={handleClick}\r\n            counter={counters.mask}\r\n          >\r\n            ðŸ‘º\r\n          </SmileButton>\r\n        </li>\r\n        <li>\r\n          <SmileButton\r\n            emoji=\"poop\"\r\n            onClick={handleClick}\r\n            counter={counters.poop}\r\n          >\r\n            ðŸ’©\r\n          </SmileButton>\r\n        </li>\r\n        <li>\r\n          <SmileButton\r\n            emoji=\"police\"\r\n            onClick={handleClick}\r\n            counter={counters.police}\r\n          >\r\n            ðŸ‘®\r\n          </SmileButton>\r\n        </li>\r\n      </ul>\r\n      <div>\r\n        <Button\r\n          className={\"btn btn-outline-dark m-5\"}\r\n          onClick={countVotes}\r\n        >\r\n          asd\r\n        </Button>\r\n        <p className=\"result disabled\">Winner is {counters.winner?.[0]} </p>\r\n      </div>\r\n    </StyledVoteForSmile>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,kBAAkB,GAAGN,MAAM,CAACO,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,EAAA,GAjBKF,kBAAkB;AAmBxB,eAAe,SAASG,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,KAAK,EAAE,CAAC;IACRC,KAAK,EAAE,CAAC;IACRC,IAAI,EAAE,CAAC;IACPC,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,SAASC,WAAWA,CAACC,KAAK,EAAE;IAC1B,MAAMC,KAAK,GAAGD,KAAK,CAACE,aAAa,CAACC,YAAY,CAAC,OAAO,CAAC;IACvDX,WAAW,CAAEY,IAAI,IAAK;MACpB,OAAO;QAAE,GAAGA,IAAI;QAAE,CAACH,KAAK,GAAGG,IAAI,CAACH,KAAK,CAAC,GAAG;MAAE,CAAC;IAC9C,CAAC,CAAC;EACJ;EAEA,SAASI,UAAUA,CAAA,EAAG;IACpB,IAAIC,QAAQ,GAAG,CAACC,QAAQ;IACxB,IAAIC,OAAO,GAAG,EAAE;IAEhB,KAAK,MAAMC,GAAG,IAAIlB,QAAQ,EAAE;MAC1B,IAAIkB,GAAG,KAAK,QAAQ,EAAE;MACtB,IAAIlB,QAAQ,CAACmB,cAAc,CAACD,GAAG,CAAC,IAAIA,GAAG,KAAK,CAAC,EAAE;QAC7C,MAAME,KAAK,GAAGpB,QAAQ,CAACkB,GAAG,CAAC;QAC3B,IAAIE,KAAK,GAAGL,QAAQ,EAAE;UACpBA,QAAQ,GAAGK,KAAK;UAChBH,OAAO,GAAG,CAACC,GAAG,CAAC;QACjB,CAAC,MAAM,IAAIE,KAAK,KAAKL,QAAQ,EAAE;UAC7BE,OAAO,CAACI,IAAI,CAACH,GAAG,CAAC;QACnB;MACF;IACF;IACAjB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAEO,MAAM,EAAEU;IAAQ,CAAC,CAAC;EAC/C;EAEA,SAASK,UAAUA,CAAA,EAAG;IACpB,IAAItB,QAAQ,CAACO,MAAM,EAAE;MACnB,oBACEd,OAAA;QAAA8B,QAAA,GAAG,YACS,eAAA9B,OAAA;UAAM+B,SAAS,EAAC,cAAc;UAAAD,QAAA,GAAC,GAAC,EAACvB,QAAQ,CAACO,MAAM,EAAC,GAAC;QAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC;IAER;EACF;EAEA,oBACEnC,OAAA,CAACC,kBAAkB;IAAA6B,QAAA,gBACjB9B,OAAA;MAAI+B,SAAS,EAAC,WAAW;MAAAD,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDnC,OAAA;MAAA8B,QAAA,gBACE9B,OAAA;QAAA8B,QAAA,eACE9B,OAAA,CAACJ,WAAW;UACVqB,KAAK,EAAC,OAAO;UACbmB,OAAO,EAAErB,WAAY;UACrBsB,OAAO,EAAE9B,QAAQ,CAACE,KAAM;UAAAqB,QAAA,EACzB;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACLnC,OAAA;QAAA8B,QAAA,eACE9B,OAAA,CAACJ,WAAW;UACVqB,KAAK,EAAC,OAAO;UACbmB,OAAO,EAAErB,WAAY;UACrBsB,OAAO,EAAE9B,QAAQ,CAACG,KAAM;UAAAoB,QAAA,EACzB;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACLnC,OAAA;QAAA8B,QAAA,eACE9B,OAAA,CAACJ,WAAW;UACVqB,KAAK,EAAC,MAAM;UACZmB,OAAO,EAAErB,WAAY;UACrBsB,OAAO,EAAE9B,QAAQ,CAACI,IAAK;UAAAmB,QAAA,EACxB;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACLnC,OAAA;QAAA8B,QAAA,eACE9B,OAAA,CAACJ,WAAW;UACVqB,KAAK,EAAC,MAAM;UACZmB,OAAO,EAAErB,WAAY;UACrBsB,OAAO,EAAE9B,QAAQ,CAACK,IAAK;UAAAkB,QAAA,EACxB;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACLnC,OAAA;QAAA8B,QAAA,eACE9B,OAAA,CAACJ,WAAW;UACVqB,KAAK,EAAC,QAAQ;UACdmB,OAAO,EAAErB,WAAY;UACrBsB,OAAO,EAAE9B,QAAQ,CAACM,MAAO;UAAAiB,QAAA,EAC1B;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACLnC,OAAA;MAAA8B,QAAA,gBACE9B,OAAA,CAACH,MAAM;QACLkC,SAAS,EAAE,0BAA2B;QACtCK,OAAO,EAAEf,UAAW;QAAAS,QAAA,EACrB;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnC,OAAA;QAAG+B,SAAS,EAAC,iBAAiB;QAAAD,QAAA,GAAC,YAAU,GAAAxB,gBAAA,GAACC,QAAQ,CAACO,MAAM,cAAAR,gBAAA,uBAAfA,gBAAA,CAAkB,CAAC,CAAC,EAAC,GAAC;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEzB;AAAC9B,EAAA,CA3GuBD,YAAY;AAAAkC,GAAA,GAAZlC,YAAY;AAAA,IAAAD,EAAA,EAAAmC,GAAA;AAAAC,YAAA,CAAApC,EAAA;AAAAoC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}