{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/ferna/OneDrive/Desktop/github/homework33-react/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{styled}from\"styled-components\";import Button from\"../Button/Button\";import{useState}from\"react\";import ModalWindow from\"../ModalWindow/ModalWindow\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledVoteForSmile=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  ul {\\n    padding: 0;\\n    margin: 0;\\n    // border: 1px solid black;\\n    display: flex;\\n    justify-content: center;\\n  }\\n  li {\\n    margin: 0 1rem;\\n    list-style: none;\\n    // border: 1px solid black;\\n  }\\n  & li * {\\n    font-size: 2rem;\\n    text-align: center;\\n  }\\n  hr {\\n    margin: 0;\\n  }\\n\"])));export default function VoteForSmile(){const[showModal,setShowModal]=useState(false);const[winner,setWinner]=useState(null);const[alert,setAlert]=useState(null);const[counters,setCounters]=useState({clown:0,beast:0,mask:0,poop:0,police:0});const emojies={clown:\"ðŸ¤¡\",beast:\"ðŸ‘¹\",mask:\"ðŸ‘º\",poop:\"ðŸ’©\",police:\"ðŸ‘®\"};function handleClickCounter(event){const emojiValue=event.target.getAttribute(\"emoji\");setCounters({...counters,[emojiValue]:counters[emojiValue]+1});}function openModal(){const settedWinner=countVotes();if(settedWinner){setWinner(settedWinner);setShowModal(prev=>!prev);setAlert(null);}else{setAlert(\"There is no winner yet\");}}function countVotes(){let maxKey=null;let maxValue=[-Infinity];for(const key in counters){if(counters[key]>maxValue[0]){maxKey=key;maxValue=[counters[key]];}else if(counters[key]===maxValue[0]){maxValue.push(counters[key]);}}if(maxValue.length>1){maxKey=null;}return maxKey;}return/*#__PURE__*/_jsxs(StyledVoteForSmile,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mt-3 mb-5\",children:\"Vote for best emoji\"}),/*#__PURE__*/_jsx(\"ul\",{children:Object.keys(emojies).map(key=>{return/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(Button,{emoji:key,onClick:handleClickCounter,children:emojies[key]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"p\",{children:counters[key]})]},key);})}),/*#__PURE__*/_jsx(Button,{className:\"btn btn-outline-dark my-2\",onClick:openModal,children:\"Show results\"}),showModal&&winner?/*#__PURE__*/_jsxs(ModalWindow,{open:showModal,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"WINNER\"}),/*#__PURE__*/_jsx(\"h3\",{children:emojies[winner]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"with \",counters[winner],\" votes\"]}),/*#__PURE__*/_jsx(Button,{onClick:openModal,children:\"AWESOME\"})]}):null,alert?/*#__PURE__*/_jsx(\"p\",{className:\"text-danger\",children:alert}):null]});}","map":{"version":3,"names":["styled","Button","useState","ModalWindow","jsx","_jsx","jsxs","_jsxs","StyledVoteForSmile","div","_templateObject","_taggedTemplateLiteral","VoteForSmile","showModal","setShowModal","winner","setWinner","alert","setAlert","counters","setCounters","clown","beast","mask","poop","police","emojies","handleClickCounter","event","emojiValue","target","getAttribute","openModal","settedWinner","countVotes","prev","maxKey","maxValue","Infinity","key","push","length","children","className","Object","keys","map","emoji","onClick","open"],"sources":["C:/Users/ferna/OneDrive/Desktop/github/homework33-react/src/homework33-34/VoteForSmile/VoteForSmile.jsx"],"sourcesContent":["import { styled } from \"styled-components\"\r\nimport Button from \"../Button/Button\"\r\nimport { useState } from \"react\"\r\nimport ModalWindow from \"../ModalWindow/ModalWindow\"\r\n\r\nconst StyledVoteForSmile = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  ul {\r\n    padding: 0;\r\n    margin: 0;\r\n    // border: 1px solid black;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  li {\r\n    margin: 0 1rem;\r\n    list-style: none;\r\n    // border: 1px solid black;\r\n  }\r\n  & li * {\r\n    font-size: 2rem;\r\n    text-align: center;\r\n  }\r\n  hr {\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nexport default function VoteForSmile() {\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [winner, setWinner] = useState(null)\r\n  const [alert, setAlert] = useState(null)\r\n  const [counters, setCounters] = useState({\r\n    clown: 0,\r\n    beast: 0,\r\n    mask: 0,\r\n    poop: 0,\r\n    police: 0,\r\n  })\r\n  const emojies = {\r\n    clown: \"ðŸ¤¡\",\r\n    beast: \"ðŸ‘¹\",\r\n    mask: \"ðŸ‘º\",\r\n    poop: \"ðŸ’©\",\r\n    police: \"ðŸ‘®\",\r\n  }\r\n\r\n  function handleClickCounter(event) {\r\n    const emojiValue = event.target.getAttribute(\"emoji\")\r\n    setCounters({\r\n      ...counters,\r\n      [emojiValue]: counters[emojiValue] + 1,\r\n    })\r\n  }\r\n\r\n  function openModal() {\r\n    const settedWinner = countVotes()\r\n    if (settedWinner) {\r\n      setWinner(settedWinner)\r\n      setShowModal((prev) => !prev)\r\n      setAlert(null)\r\n    } else {\r\n      setAlert(\"There is no winner yet\")\r\n    }\r\n  }\r\n\r\n  function countVotes() {\r\n    let maxKey = null\r\n    let maxValue = [-Infinity]\r\n\r\n    for (const key in counters) {\r\n      if (counters[key] > maxValue[0]) {\r\n        maxKey = key\r\n        maxValue = [counters[key]]\r\n      } else if (counters[key] === maxValue[0]) {\r\n        maxValue.push(counters[key])\r\n      }\r\n    }\r\n\r\n    if (maxValue.length > 1) {\r\n      maxKey = null\r\n    }\r\n    return maxKey\r\n  }\r\n\r\n  return (\r\n    <StyledVoteForSmile>\r\n      <h1 className=\"mt-3 mb-5\">Vote for best emoji</h1>\r\n\r\n      <ul>\r\n        {Object.keys(emojies).map((key) => {\r\n          return (\r\n            <li key={key}>\r\n              <Button\r\n                emoji={key}\r\n                onClick={handleClickCounter}\r\n              >\r\n                {emojies[key]}\r\n              </Button>\r\n              <hr />\r\n              <p>{counters[key]}</p>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n\r\n      <Button\r\n        className=\"btn btn-outline-dark my-2\"\r\n        onClick={openModal}\r\n      >\r\n        Show results\r\n      </Button>\r\n\r\n      {/*modal window */}\r\n      {showModal && winner ? (\r\n        <ModalWindow open={showModal}>\r\n          <h2>WINNER</h2>\r\n          <h3>{emojies[winner]}</h3>\r\n          <p>with {counters[winner]} votes</p>\r\n          <Button onClick={openModal}>AWESOME</Button>\r\n        </ModalWindow>\r\n      ) : null}\r\n\r\n      {/* alert if there is no winner */}\r\n      {alert ? <p className=\"text-danger\">{alert}</p> : null}\r\n    </StyledVoteForSmile>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}