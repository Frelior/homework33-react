{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\les\\\\homework33-react\\\\src\\\\homework35\\\\Form\\\\MyForm.jsx\";\nimport { StyledForm } from \"./StyledForm\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskForm({\n  setStorage\n}) {\n  //adding value from input to local storage\n  function addTaskToLocalStorage(task) {\n    if (task.title) {\n      const tasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n      task.completed = false;\n      task.id = tasks.length + 1;\n      tasks.push(task);\n      setStorage(tasks);\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  }\n  const validationSchema = Yup.object({\n    title: Yup.string().min(3, \"Title must be at least 3 characters long\").required(\"Title is required\")\n  });\n  return /*#__PURE__*/_jsxDEV(StyledForm, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            title: \"\"\n          },\n          validationSchema: validationSchema,\n          onSubmit: values => addTaskToLocalStorage(values),\n          children: ({\n            errors,\n            touched\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(Field, {\n                name: \"title\",\n                type: \"text\",\n                className: `form-control ${touched.title && errors.title ? \"is-invalid\" : \"\"}`,\n                placeholder: \"Enter title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"title\",\n                component: \"div\",\n                className: \"invalid-feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary mt-3\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["StyledForm","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","TaskForm","setStorage","addTaskToLocalStorage","task","title","tasks","JSON","parse","localStorage","getItem","completed","id","length","push","setItem","stringify","validationSchema","object","string","min","required","children","className","initialValues","onSubmit","values","errors","touched","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","type","placeholder","component","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/les/homework33-react/src/homework35/Form/MyForm.jsx"],"sourcesContent":["import { StyledForm } from \"./StyledForm\"\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\"\r\nimport * as Yup from \"yup\"\r\n\r\nexport default function TaskForm({ setStorage }) {\r\n  //adding value from input to local storage\r\n  function addTaskToLocalStorage(task) {\r\n    if (task.title) {\r\n      const tasks = JSON.parse(localStorage.getItem(\"tasks\")) || []\r\n      task.completed = false\r\n      task.id = tasks.length + 1\r\n      tasks.push(task)\r\n      setStorage(tasks)\r\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks))\r\n    }\r\n  }\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string()\r\n      .min(3, \"Title must be at least 3 characters long\")\r\n      .required(\"Title is required\"),\r\n  })\r\n\r\n  return (\r\n    <StyledForm>\r\n      <div className={\"card\"}>\r\n        <div className=\"card-body\">\r\n          <Formik\r\n            initialValues={{ title: \"\" }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values) => addTaskToLocalStorage(values)}\r\n          >\r\n            {/* нужно проверить errors, touched и в фокусе ли элемент  */}\r\n            {({ errors, touched }) => (\r\n              <Form>\r\n                <label htmlFor=\"title\">Task</label>\r\n                <div>\r\n                  {\" \"}\r\n                  <Field\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    className={`form-control ${\r\n                      touched.title && errors.title ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                    placeholder=\"Enter title\"\r\n                  ></Field>\r\n                  <ErrorMessage\r\n                    name=\"title\"\r\n                    component=\"div\"\r\n                    className=\"invalid-feedback\"\r\n                  />\r\n                </div>\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary mt-3\"\r\n                >\r\n                  Add\r\n                </button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </StyledForm>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}