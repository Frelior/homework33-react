{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferna\\\\OneDrive\\\\Desktop\\\\github\\\\homework33-react\\\\src\\\\homework36\\\\Form\\\\Form.jsx\";\nimport { StyledForm } from \"./Form.js\";\nimport { Formik, Form as FormikForm, Field, ErrorMessage } from \"formik\";\nimport { object, string, number, date, InferType } from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = object({\n  name: string().required(\"Name is required\"),\n  email: string().email(\"Email is invalid\"),\n  phone: number().positive(\"Phone must be positive\")\n});\nexport default function Form() {\n  return /*#__PURE__*/_jsxDEV(StyledForm, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        phone: \"\"\n      },\n      onSubmit: console.log(\"submit\"),\n      children: /*#__PURE__*/_jsxDEV(FormikForm, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            placeholder: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"tel\",\n            id: \"phone\",\n            name: \"phone\",\n            placeholder: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["StyledForm","Formik","Form","FormikForm","Field","ErrorMessage","object","string","number","date","InferType","jsxDEV","_jsxDEV","validationSchema","name","required","email","phone","positive","children","initialValues","onSubmit","console","log","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ferna/OneDrive/Desktop/github/homework33-react/src/homework36/Form/Form.jsx"],"sourcesContent":["import { StyledForm } from \"./Form.js\"\r\nimport { Formik, Form as FormikForm, Field, ErrorMessage } from \"formik\"\r\nimport { object, string, number, date, InferType } from \"yup\"\r\n\r\nconst validationSchema = object({\r\n  name: string().required(\"Name is required\"),\r\n  email: string().email(\"Email is invalid\"),\r\n  phone: number().positive(\"Phone must be positive\"),\r\n})\r\n\r\nexport default function Form() {\r\n  return (\r\n    <StyledForm>\r\n      {\" \"}\r\n      <Formik\r\n        initialValues={{ name: \"\", email: \"\", phone: \"\" }}\r\n        onSubmit={console.log(\"submit\")}\r\n      >\r\n        <FormikForm>\r\n          <div>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <Field\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n            ></Field>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <Field\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n            ></Field>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"phone\">Phone</label>\r\n            <Field\r\n              type=\"tel\"\r\n              id=\"phone\"\r\n              name=\"phone\"\r\n              placeholder=\"Phone\"\r\n            ></Field>\r\n          </div>\r\n        </FormikForm>\r\n      </Formik>\r\n    </StyledForm>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}